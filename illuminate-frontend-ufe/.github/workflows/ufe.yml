name: UFE CI for PRs

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write

env:
  UFE_CICD_NODE22_IMAGE: artifactory.lipstack.sephoraus.com/ufe:github_node22_12_0

jobs:
##############################
# install
##############################
  install-dependencies:
    runs-on:
      group: Sephora-US-Digital
    name: Install dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Run "npm ci" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "PUPPETEER_SKIP_DOWNLOAD=true npm ci"

      - name: Create node_modules archive
        run: tar -czf node_modules.tar.gz node_modules projects/*/node_modules

      - name: Upload build artifacts
        uses: actions/upload-artifact@main
        with:
          name: install-dependencies
          path: |
            node_modules.tar.gz
            projects/server/src/config/buildInfo.json
          compression-level: 9
          retention-days: 1
          if-no-files-found: error

##############################
# build
##############################
  build-ui:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - install-dependencies
    name: Build UI project
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download install dependencies
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Run "npm run build --workspace=ui" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run build --workspace=ui"

      - name: Upload the UI project build artifacts
        uses: actions/upload-artifact@main
        with:
          name: ui-build-artifacts
          path: |
            projects/ui/dist/
            projects/ui/src/pages/index.js
            projects/ui/src/utils/locales/allResources.js
          compression-level: 9
          retention-days: 1
          if-no-files-found: error

##############################
# test
##############################
  run-ui-tests:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - build-ui
    name: Run UI project Jest tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download install dependencies
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Download the UI project build artifacts
        uses: actions/download-artifact@main
        with:
          name: ui-build-artifacts
          path: projects/ui

      - name: Run "npm run test --workspace=ui" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run test --workspace=ui"

  run-ui-jasmine-tests:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - install-dependencies
    name: Run UI project Jasmine tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download install dependencies
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      # - name: Download the UI project build artifacts
      #   uses: actions/download-artifact@main
      #   with:
      #     name: ui-build-artifacts
      #     path: projects/ui

      - name: Run "npm run test-jasmine --workspace=ui" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run test-jasmine --workspace=ui"

  run-server-tests:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - build-ui
    name: Run Server project tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download install dependencies
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Download the UI project build artifacts
        uses: actions/download-artifact@main
        with:
          name: ui-build-artifacts
          path: projects/ui

      - name: Run "npm run test --workspace=server" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run test --workspace=server"
        continue-on-error: true

  # run-visual-tests:
  #   runs-on:
  #     group: Sephora-US-Digital
  #   needs:
  #     - build-ui
  #   name: Run visual tests for shared-components project
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}
  #         repository: ${{ github.event.pull_request.head.repo.full_name }}

  #     - name: Download install dependencies
  #       uses: actions/download-artifact@main
  #       with:
  #         name: install-dependencies
  #         path: .

  #     - name: Unarchive node_modules.tar.gz
  #       run: tar -xzf node_modules.tar.gz

  #     - name: Download the shared-components project build artifacts
  #       uses: actions/download-artifact@main
  #       with:
  #         name: shared-components-build-artifacts
  #         path: projects/shared-components

  #     - name: Run "docker run docker_image_for_visual_tests" command
  #       run: echo "docker run docker_image_for_visual_tests"

##############################
# code quality
##############################
  lint-ui-code:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - install-dependencies
    name: ESLint UI project
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download node_modules.tar.gz
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Run "npm run eslint --workspace=ui" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run eslint --workspace=ui"

  lint-server-code:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - install-dependencies
    name: ESLint Server project
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download node_modules.tar.gz
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Run "npm run eslint --workspace=server" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run eslint --workspace=server"

  lint-agent-aware-code:
    runs-on:
      group: Sephora-US-Digital
    needs:
      - install-dependencies
    name: ESLint Agent Aware project
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Download node_modules.tar.gz
        uses: actions/download-artifact@main
        with:
          name: install-dependencies
          path: .

      - name: Unarchive node_modules.tar.gz
        run: tar -xzf node_modules.tar.gz

      - name: Run "npm run eslint --workspace=agent-aware" command
        run: docker run --rm -v $(pwd):/monorepo -w /monorepo ${{ env.UFE_CICD_NODE22_IMAGE }} bash -c "npm run eslint --workspace=agent-aware"

  # run-sonarqube:
  #   needs:
  #     - install-dependencies
  #   runs-on:
  #     group: Sephora-US-Digital
  #   name: Run Sonarqube
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@main
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}
  #         repository: ${{ github.event.pull_request.head.repo.full_name }}
