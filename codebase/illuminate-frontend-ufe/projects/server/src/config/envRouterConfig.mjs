/* eslint object-curly-newline: 0 */
import {
    getEnvProp
} from '#server/utils/serverUtils.mjs';
import {
    SECOND,
    MINUTE
} from '#server/config/TimeConstants.mjs';
import {
    ENABLE_PREVIEW,
    AGENT_AWARE_SITE_ENABLED,
    isUfeEnvProduction,
    SERVER_HOME
} from '#server/config/envConfig.mjs';

const FIVE_SECONDS = 5 * SECOND,
    THIRTY_SECONDS = 30 * SECOND,
    FIVE_MINUTES = 5 * MINUTE,
    THIRTY_MINUTES = 30 * MINUTE;

const API_CALL_TIMEOUT = 15 * SECOND;

const CONFIG_CACHE_REFRESH_TIME_DEFAULT = isUfeEnvProduction ? THIRTY_MINUTES : FIVE_MINUTES;

const REDIS_CONFIG = `${SERVER_HOME}/src/config/redisConfig.mjs`;

// these are the defaults for QA3 as of 2019-09-25
const DEVICE_ID = getEnvProp('DEVICE_ID', 'cce99fbc15072aa89aaa297983eda15d806e49e51d6a064ef1c61fe934613d48'),
    ACCESS_TOKEN = getEnvProp('ACCESS_TOKEN', '614e31c79b6b8e15198213f2573d1984c90ad5466402c7b69032c36b471cc646'),
    ACCEPT_COMPRESSED_ATG_DATA = getEnvProp('ACCEPT_COMPRESSED_ATG_DATA', false),
    API_HOST = getEnvProp('API_HOST', '10.187.67.24'),
    API_PORT = getEnvProp('API_PORT', '80'),
    API_ROUTER_SERVER_NAME = getEnvProp('API_ROUTER_SERVER_NAME'),
    API_ROUTER_SERVER_PORT = getEnvProp('API_ROUTER_SERVER_PORT', '5000'),
    API_CLUSTER_WORKERS = getEnvProp('API_CLUSTER_WORKERS', 1),
    API_REQUEST_TIMEOUT = getEnvProp('API_REQUEST_TIMEOUT', API_CALL_TIMEOUT),
    CACHE_MANAGER_USERNAME = getEnvProp('CACHE_MANAGER_USERNAME', 'jupiter'),
    CACHE_MANAGER_PASSWORD = getEnvProp('CACHE_MANAGER_PASSWORD', 'god of the sky and thunder'),
    CLUSTER_WORKERS = 1, // there is only 1 in prod, there should be 1 everywhere
    COMPRESS_POST_DATA_TO_UFE = getEnvProp('COMPRESS_POST_DATA_TO_UFE', true),
    CONFIGURATION_CACHE_REFERSH_TIME = getEnvProp('CONFIGURATION_CACHE_REFERSH_TIME', CONFIG_CACHE_REFRESH_TIME_DEFAULT),
    ENABLE_EMBEDDED_UFE = getEnvProp('ENABLE_EMBEDDED_UFE', false),
    DISABLE_SSL = getEnvProp('DISABLE_SSL', false),
    DISABLE_REDIS_CLUSTER_MODE = getEnvProp('DISABLE_REDIS_CLUSTER_MODE', false),
    DUMP_HASH_MISSES_DATA = getEnvProp('DUMP_HASH_MISSES_DATA', false),
    ENABLE_AGENT = getEnvProp('ENABLE_AGENT', true),
    ENABLE_AGENT_KEEPALIVE = getEnvProp('ENABLE_AGENT_KEEPALIVE', true),
    ENABLE_MEMORY_CACHE = getEnvProp('ENABLE_MEMORY_CACHE', true),
    ENABLE_REDIS = getEnvProp('ENABLE_REDIS', false),
    ENABLE_HTTPS_FOR_BXS = getEnvProp('ENABLE_HTTPS_FOR_BXS', false),
    ENABLE_HTTPS_FOR_CXS = getEnvProp('ENABLE_HTTPS_FOR_CXS', false),
    JERRI_USE_WOODY = getEnvProp('JERRI_USE_WOODY', false),
    KEEPALIVE_TIMEOUT = getEnvProp('KEEPALIVE_TIMEOUT', 2500),
    MAX_ECONNRESET_RETRY_COUNT = getEnvProp('MAX_ECONNRESET_RETRY_COUNT', 3),
    MAX_API_RETRY_COUNT = getEnvProp('MAX_API_RETRY_COUNT', 1),
    MAX_API_SOCKETS = getEnvProp('MAX_API_SOCKETS', 200),
    RENDER_HOST = getEnvProp('RENDER_HOST', 'local.sephora.com'),
    RENDER_HOST_PORT = getEnvProp('RENDER_HOST_PORT', 3000),
    PROXY_HOST = getEnvProp('PROXY_HOST', 'true-azre1-qa1.sephora.com'),
    PROXY_PORT = getEnvProp('PROXY_PORT', 443),
    PROMETHEUS_PORT = getEnvProp('PROMETHEUS_PORT', 9400),
    REDIS_HOST = getEnvProp('REDIS_HOST'),
    REDIS_PORT = getEnvProp('REDIS_PORT'),
    REDIS_AUTH_PASS = getEnvProp('REDIS_AUTH_PASS'),
    REDIS_PREFIX = getEnvProp('REDIS_PREFIX', 'local'),
    REDIS_USE_SSL = getEnvProp('REDIS_USE_SSL', false),
    REDIS_CONNECTION_CLOSE_TIME = getEnvProp('REDIS_CONNECTION_CLOSE_TIME', THIRTY_SECONDS),
    REDIS_CONNECTION_RETRY_WAIT_TIME = getEnvProp('REDIS_CONNECTION_RETRY_WAIT_TIME', THIRTY_SECONDS),
    REDIS_CONNECTION_RETRY_COUNT = getEnvProp('REDIS_CONNECTION_RETRY_COUNT', 25),
    REDIS_CONNECTION_RESET_COUNT = getEnvProp('REDIS_CONNECTION_RESET_COUNT', 50),
    REDIS_CONNECTION_POOL_SIZE = getEnvProp('REDIS_CONNECTION_POOL_SIZE', 2),
    REDIS_PING_TIME = getEnvProp('REDIS_PING_TIME', FIVE_MINUTES), // 5 minutes MS timeout is 10
    REDIS_NATMAP = getEnvProp('REDIS_NATMAP', false),
    REDIS_SLOTS_TIMEOUT = getEnvProp('REDIS_SLOTS_TIMEOUT', FIVE_SECONDS),
    ROUTER_SERVER_PORT = getEnvProp('ROUTER_SERVER_PORT', 443),
    ROUTER_SERVER_NAME = getEnvProp('ROUTER_SERVER_NAME'),
    SDN_ANDROID_CLIENT_ID = getEnvProp('SDN_ANDROID_CLIENT_ID', ''),
    SDN_ANDROID_CLIENT_SECRET = getEnvProp('SDN_ANDROID_CLIENT_SECRET', ''),
    SDN_IOS_CLIENT_ID = getEnvProp('SDN_IOS_CLIENT_ID', ''),
    SDN_IOS_CLIENT_SECRET = getEnvProp('SDN_IOS_CLIENT_SECRET', ''),
    SDN_UFE_CLIENT_ID = getEnvProp('SDN_UFE_CLIENT_ID', ''),
    SDN_UFE_CLIENT_SECRET = getEnvProp('SDN_UFE_CLIENT_SECRET', ''),
    SDN_BV_CLIENT_ID = getEnvProp('SDN_BV_CLIENT_ID', ''),
    SDN_BV_CLIENT_SECRET = getEnvProp('SDN_BV_CLIENT_SECRET', ''),
    SDN_OLR_CLIENT_ID = getEnvProp('SDN_OLR_CLIENT_ID', ''),
    SDN_OLR_CLIENT_SECRET = getEnvProp('SDN_OLR_CLIENT_SECRET', ''),
    SDN_API_HOST = getEnvProp('SDN_API_HOST', 'azre1-qa-api.internal.sephora.com'),
    SDN_API_PORT = getEnvProp('SDN_API_PORT', 443),
    SIMPLE_CACHE_EXP_TIME = getEnvProp('SIMPLE_CACHE_EXP_TIME', THIRTY_SECONDS),
    SIMPLE_CACHE_MAX_SIZE = getEnvProp('SIMPLE_CACHE_MAX_SIZE', 20000),
    SIMPLE_CACHE_PURGE_PERCENT = getEnvProp('SIMPLE_CACHE_PURGE_PERCENT', 40),
    SSL_KEY = getEnvProp('SSL_KEY', 'ssl-keys/domain.keys'),
    SSL_CERT = getEnvProp('SSL_CERT', 'ssl-keys/domain.crt'),
    UFE_COMPRESSION_TYPE = getEnvProp('UFE_COMPRESSION_TYPE', 'gzip');

// by default
// ENABLE_MEMORY_CACHE is true - local using router.sh or apiRouter.sh it will be false
// ENABLE_PREVIEW is false unless preview env
// AGENT_AWARE_SITE_ENABLED is false unless aas env
const ENABLE_CONFIGURATION_UPDATE = ENABLE_MEMORY_CACHE &&
    !ENABLE_PREVIEW && !AGENT_AWARE_SITE_ENABLED;

export {
    ACCESS_TOKEN,
    API_HOST,
    API_PORT,
    API_REQUEST_TIMEOUT,
    API_ROUTER_SERVER_NAME,
    API_ROUTER_SERVER_PORT,
    API_CLUSTER_WORKERS,
    ACCEPT_COMPRESSED_ATG_DATA,
    CACHE_MANAGER_USERNAME,
    CACHE_MANAGER_PASSWORD,
    CLUSTER_WORKERS,
    COMPRESS_POST_DATA_TO_UFE,
    CONFIGURATION_CACHE_REFERSH_TIME,
    ENABLE_CONFIGURATION_UPDATE,
    DEVICE_ID,
    DISABLE_SSL,
    DISABLE_REDIS_CLUSTER_MODE,
    DUMP_HASH_MISSES_DATA,
    ENABLE_AGENT,
    ENABLE_AGENT_KEEPALIVE,
    ENABLE_MEMORY_CACHE,
    ENABLE_REDIS,
    ENABLE_EMBEDDED_UFE,
    ENABLE_HTTPS_FOR_BXS,
    ENABLE_HTTPS_FOR_CXS,
    JERRI_USE_WOODY,
    KEEPALIVE_TIMEOUT,
    MAX_ECONNRESET_RETRY_COUNT,
    MAX_API_RETRY_COUNT,
    MAX_API_SOCKETS,
    PROXY_HOST,
    PROXY_PORT,
    PROMETHEUS_PORT,
    REDIS_CONFIG,
    REDIS_HOST,
    REDIS_PORT,
    REDIS_AUTH_PASS,
    REDIS_PREFIX,
    REDIS_USE_SSL,
    RENDER_HOST,
    RENDER_HOST_PORT,
    REDIS_CONNECTION_CLOSE_TIME,
    REDIS_CONNECTION_RETRY_WAIT_TIME,
    REDIS_CONNECTION_RETRY_COUNT,
    REDIS_CONNECTION_RESET_COUNT,
    REDIS_CONNECTION_POOL_SIZE,
    REDIS_PING_TIME,
    REDIS_NATMAP,
    REDIS_SLOTS_TIMEOUT,
    ROUTER_SERVER_PORT,
    ROUTER_SERVER_NAME,
    SDN_ANDROID_CLIENT_SECRET,
    SDN_ANDROID_CLIENT_ID,
    SDN_IOS_CLIENT_SECRET,
    SDN_IOS_CLIENT_ID,
    SDN_UFE_CLIENT_SECRET,
    SDN_UFE_CLIENT_ID,
    SDN_BV_CLIENT_ID,
    SDN_BV_CLIENT_SECRET,
    SDN_OLR_CLIENT_ID,
    SDN_OLR_CLIENT_SECRET,
    SDN_API_HOST,
    SDN_API_PORT,
    SIMPLE_CACHE_EXP_TIME,
    SIMPLE_CACHE_MAX_SIZE,
    SIMPLE_CACHE_PURGE_PERCENT,
    SSL_KEY,
    SSL_CERT,
    UFE_COMPRESSION_TYPE
};
