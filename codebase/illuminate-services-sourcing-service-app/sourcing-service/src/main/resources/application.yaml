logging:
  config: classpath:log4j2.xml

sephora:
  cache:
    redisson:
      type: none
    cache2k:
      type: jcache
    default:
      type: redis
    cache-names:
      - referenceItemsCacheByStatus
      - referenceItemsCacheByName
      - referenceItemsCacheById
      - inventoryHoldCache

  warmup:
    enabled: false

spring:
  cloud:
    bus:
      content-type: application/json
      destination: Sephora.ConfigHub.Client.ConfigUpdate_QA1
    stream:
      bindings:
        springCloudBusInput:
          destination: Sephora.ConfigHub.Client.ConfigUpdate_QA1
          group: 'Sephora.ConfigHub.Client.${spring.application.name}.${random.uuid}'
        springCloudBusOutput:
          destination: Sephora.ConfigHub.Client.ConfigUpdate_QA1
      kafka:
        binder:
          brokers:
            - 'pkc-lqzgd.westus2.azure.confluent.cloud:9092'
          configuration:
            '“[auto.offset.reset]“': latest
            '“[default.api.timeout.ms]“': 15000
            '“[request.timeout.ms]“': 12000
            '“[sasl.jaas.config]“': >-
              org.apache.kafka.common.security.plain.PlainLoginModule required
              username="RWUHYGWNUJGIVW2V"
              password="ciyWAn4l5CUief46xi5nlqMhwhLx2HI+P4pSgx0qhNqspXb3KUNSCxpSPw7EwqAA";
            '“[sasl.mechanism]“': PLAIN
            '“[security.protocol]“': SASL_SSL
            '“[ssl.endpoint.identification.algorithm]“': https
    kubernetes:
      enables: false
    httpclientfactories:
      apache:
        enabled: true

discovery:
  client:
    currentServiceId: sourcing-service-svc

request:
  log:
    jsonBodies: true
    maxPayloadLength: 1000
    excludeUrlPatterns: '/actuator/health,/actuator/liveness,/actuator/prometheus'

management:
  health:
    azure-key-vault:
      enabled: false
    redis:
      enabled: false
  endpoint:
    restart:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - loggers
          - health
          - caches
          - liveness
          - prometheus
          - busrefresh
          - refresh
  metrics:
    tags:
      application: ${spring.application.name}

  distribution:
    percentiles-histogram:
      http.server:
        requests: true
    percentiles:
      http.server:
        requests: 0.5, 0.75, 0.90, 0.95, 0.99
deliverydates:
  azure:
    cosmosdb:
      #uri: https://sep-eus1-qa-pds-db01.documents.azure.com:443
      #key: ${COSMOS_DB_KEY_QA_PDS}
      #secondaryKey: ${COSMOS_DB_SECONDARY_KEY_QA_PDS}
      secondaryKey: g0FBMaDLBUSnrQvJ7eewpAIY6Ox9IlknKAeuhNd0xyeXhKLUaMfzH5gNJV8ZjuE262guzSQFASMVeSNXeZ5ZbQ==
      key: dgH2HWbRuJrDOUbkcXfMoiNuSnQGY7ELsgtubQGW4bQEo8Qx8DceN1NwmX17nKLo9HlcX0qvJUyYiKlfg0mrTw==
      dbName: delivery_dates
      populateQueryMetrics: false
      maxPoolSize: 1000
      requestTimeoutInMillis: 3000
      idleConnectionTimeoutInMillis: 43200000
      maxRetryWaitTimeInSeconds: 3
      maxRetryAttemptsOnThrottledRequests: 5
      connectionMode:
        mode: DIRECT
      changeFeedProcessor:
        leaseContainer: lease
        leasThroughput: 400
        feedContainers: shipNode,carrierService,event,transitTime,orderProcessingDelay,calendarExceptionDay

sourcing:
  options:
    availabilityhub:
      redisCache:
        useCache: true
      useAvailabilityHubForSourcing: true
      enableDatesByServiceApi: true
      enableCartSourceApi: true
      rampUpEnabled: false
      useScatterGatherDateByService: true
      cartLineTypeAdjustmentsEnabled: true
      datesByServiceAuditEnabled: false
      cartSourceServiceAuditEnabled: false
      promiseDtByCarrierServiceEnabled: true
      cartLineTypeCarrierServiceCodes:
        - 24
        - 9
      enableCarrierCodeAdjustment: true
      carrierCodeAdjustments:
        17: EXPRESS_17
        20: FLASH_20
        1: STANDARD_1
        8: STANDARD_1
        9: STANDARD_1
        23: FLASH_1
        24: FLASH_1
        25: FLASH_1
      electronicFulfillmentUSCarrierCode: 1
      electronicFulfillmentCACarrierCode: 54
      electronicFulfillmentAddressConfig:
        US:
          state: CA
          zipCode: 94105
        CA:
          state: CA
          zipCode: 94105
      defaultAddressConfig:
        US:
          state: CA
          zipCode: 99999
        CA:
          state: ON
          zipCode: Z9Z9Z9
        BORDERFREE:
          state: CA
          zipCode: 99999
      dcLocations: 0701,0801,1001,1021,1050,0750,US_NONSHIP,CA_NONSHIP,1070
      mock:
        distribution: '10-20:23%,20-30:60%,30-50:15%,50-200:2%'
      samedayCarrierCodes:
        - "38"
        - "58"
    feign:
      inventoryavailability:
        useInventoryService: false
        serviceUrl: http://inventory-availability-qa2.eus1-omni-devqa.internalsephora.com
        connectionTimeout: 3000
        readTimeout: 3000
        defaultMaxPerRouteConnections: 50
        maxTotalConnections: 100
        retryPeriod: 100
        retryMaxPeriod: 500
        inactivityTimeout: 180000
      inventory:
        serviceUrl: http://inventory-svc:8055
        connectionTimeout: 3000
        readTimeout: 3000
        defaultMaxPerRouteConnections: 50
        maxTotalConnections: 100
        retryPeriod: 100
        retryMaxPeriod: 500
        inactivityTimeout: 180000
    async:
      enabled: true
      commitsThreadLimit: 500
    azure:
      cosmosdb:
        #uri: https://sep-eus1-qa-pds-db01.documents.azure.com:443
        #key: ${COSMOS_DB_KEY_QA_PDS}
        #secondaryKey: ${COSMOS_DB_SECONDARY_KEY_QA_PDS}
        secondaryKey: g0FBMaDLBUSnrQvJ7eewpAIY6Ox9IlknKAeuhNd0xyeXhKLUaMfzH5gNJV8ZjuE262guzSQFASMVeSNXeZ5ZbQ==
        key: dgH2HWbRuJrDOUbkcXfMoiNuSnQGY7ELsgtubQGW4bQEo8Qx8DceN1NwmX17nKLo9HlcX0qvJUyYiKlfg0mrTw==
        dbName: sourcing
        populateQueryMetrics: false
        maxPoolSize: 1000
        requestTimeoutInMillis: 3000
        idleConnectionTimeoutInMillis: 43200000
        maxRetryWaitTimeInSeconds: 3
        maxRetryAttemptsOnThrottledRequests: 5
        connectionMode:
          mode: DIRECT
        changeFeedProcessor:
          leaseContainer: lease
          leasThroughput: 400
          feedContainers: shipNode,sourcingRule,zoneMap
    cache:
      type: none
      cache-names:
        - findShipNode
        - shipNode
        - sourcingRule
        - getNodesPriority
        - carrierService
        - getByIdShipNode
        - dynamicConfig
    warmup:
      enabled: false
    zonemapping:
      #When Zone mapping is uploaded, an upsert operation is performed. If we set this property to true
      # the existing values will be deleted first(Since we are updating the same value all the time, there
      # is actually no need of clearing, thats why we are keeping this as false
      clearBeforeUpsert: false

    bulk-executor:
      connectionMode: DIRECT
      zoneMapBulkImportThroughput: 20000
      zoneMapBulkImportMaxPoolSize: 1000
    file-upload:
      maxUploadFileSize: 75MB
    mail:
      enabled: true
      host: smtpvip.qts.sephoraus.com
      port: 25
      username: OMS
      password:
      protocol: smtp
      auth: true
      starttlsEnabled: true
      debugEnabled: true
    zone-map:
      mail:
        enabled: true
        fromAddress: no-reply@sephora.com
        toAddress:
          - safeer.ahameed@sephora.com
          - vijayabhaskara.tatik@sephora.com
        ccAddress:
          - safeer.ahameed@sephora.com
        subject: OMS Zone Mapping File Processed

location-priorities:
  isLocationsByPriorities: true
  azureTableName: devsephorasourcingServicelocationsByPriorityTable
  priorityConfig:
    - requestOrigin: DEFAULT, PAS
      priorityOrder: CACHE, AZURE_TABLE
    - requestOrigin: PERF_TEST
      priorityOrder: AZURE_TABLE

azure:
  table:
    host: https://sepeus1devqaoms02.table.core.windows.net
    sasToken: sv=2024-11-04&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2027-05-04T00:02:34Z&st=2025-05-07T16:02:34Z&spr=https&sig=8mZGbeleOEIJol9T2PWRwp9903HNlmcVeN7b%2FVF5MyM%3D
    feign:
      retryPeriod: 100
      maxRetryPeriod: 500
      maxRetryAttempts: 2
      connectionTimeout: 5000
      readTimeout: 1000

opentracing:
  spring:
    web:
      enabled: false
    redis:
      connect-timeout: 15s
      host: sepeus1qaaksredis01.eastus.redisenterprise.cache.azure.net
      lettuce:
        pool:
          enabled: true
          max-active: 32
          max-idle: 8
          max-wait: 50ms
          min-idle: 0
      password: '${REDIS_PASSWORD}'
      port: 10000
      ssl: true
      timeout: 5000ms

oms:
  externalInventoryCheck: true

availabilityhub:
  enabled: true
  client:
    serviceUrl : https://sephora-qa-pfpc.yantriks.com
    #serviceUrl: http://inventory-platform-mock-server-perf1.eus1-omni-perf.internalsephora.com
    #serviceUrl: http://inventory-platform-mock-server-qa1.eus1-devqa.internalsephora.com
    customInventoryUrl: https://sephora-qa-custom-inventory.yantriks.com
    commonServiceUrl: https://sephora-qa-yso-common.yantriks.com
    #customInventoryUrl: http://inventory-platform-mock-server-qa1.eus1-devqa.internalsephora.com
    getReservationServiceUrl : https://sephora-qa-visibility.yantriks.com
    defaultMaxPerRouteConnections: 1000
    maxTotalConnections: 2000
    socketTimeout: 5000
    connectionTimeout: 5000
    connectionRequestTimeout: 5000
    readTimeout: 1000
    batchSize: 5
    retryPeriod: 100
    retryMaxPeriod: 500
    retryMaxAttempts: 3
    inactivityTimeout: 180000
    jwttoken:
      #privateKeyId: ${YANTRIKS_JWT_ID}
      privateKeyId: bbaf8ea0df6cd27cc02f8c496fb379d9d37ab3f4
      issuer: sephora-qa
      audience: saas-yantriks-sephora-qa
      timeToLive: 2100
      #privateKey: ${YANTRIKS_JWT_KEY}
      privateKey: -----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCn5ksWi4UwZYNu\natRJ8QhS0wxyFqPT5XTA+S+mor1cpodSSE8eE3Y1ige0V4TxwMWgAHbTJ+jCysXG\nJlgT37ZF0cZbYNozUF8iM67caCgYVU4u4B64P6GKnq1ju0HzssZ5vpSR1mhvS/P9\nkaBsPRYxKPd5EbX5kWNEtk1p8TcRLL5OIUK6o0KYhc4aHPmniccUHxKiHxw7NOae\nKERqsBZar63PmxcXPeQllRN6KzXgBswUDg1NbQXf1FKQfmzEKSx0KbYg8soRatC2\n4UDiS0pD2lGzHd4GjtJdOA8kF1PMIO9ZdORJ/y6LNvL2vaXUQ4m+NfpTQOKI59+W\nMeUdnwQVAgMBAAECggEAS4mrrKf2szBoskuz2NRtRz4WclnHOTUZkxxJGPJMuZte\ndGF93u0omKvSDYv2jwGIqBStYRCqgsDRu/VSWRakHcNkN4ZahQ2az3trJ1Rg/Zmb\nhDFnAMP3/LKpFZ6Q7IA5FVrt4rMQ50nHqwRSpX/SNSnWNQ0HzxFfFPHj4E8a1EmP\neZNSoOvFkkcb2IvlGPNGtQQZ3Q3w3uzW4qPlypE6MrtiGr8GbTgxiQh3WFNMf4kU\nBVj7ozmaU3YFxDn5mvJ+rRd9oKzQFMH8OAj+SDyYycPCrGWO3J751fqopwxFp5qT\nA4VhN7gKuxPoTJVt2HliBLgjmxvq+yRK6d7Ef8jcnQKBgQDTuM9GOpsLIO+bPbYm\n1Tvpqhy8k0/WRhBTzHOoZkxc2gydDt4qGvmsUoXpHWTttAQxWczol9LYrLCdPA0+\n4uROT5oLT4c9MjCKOsPIU5Cf4b798NMXy3wc8M2x+WQjdQu2VmI5G6UwFDBFIAXe\nn9Yp2AqipC8STD7BDd3OWWP4JwKBgQDLA1GweZ77YD4Y9KmYGGBcgRar3U3ut9tA\noKkecJkQAWIJLArbdlXapt/lM0sQJ5X5bC61+PVEbuomnYqTnuraIpj38TPWaly6\nKy9PeqyFkRmGsD1J0cHYgC5UFmsnWKcFQ6G2kk0ExG7CmkyvmSZJpTBiV/sS0Bxy\nZOyrfayrYwKBgQCNv2yeQzxsXfetQsrCAv8iuK6WnjXUaoIh6H8CnsK/Y4kQWdTp\n8bd45KMc6H4bGuu3sryaeJNEV5HDI2Jm2PcrauXibrNHiGOxGBjd9Pyd3kDFuUdK\n5gRJR/sfDa46gvF9eSY3v8d/gfSzQvZLD04OI8MzEqMlKADXtZXrwjNI/wKBgQCt\nujpmzb06GsMpMf4LtRiJMMLI8koltdp/tLzk2rBxXO2bMcBczChuQ42oIzviKC4U\nUvqqKNEi7dOclgani0AoyaCj1RpqK30Mp7YFytHmPyRb+WeJS2IaNp7uwHyUIC5V\nt+mkRhB4uuyZxddIEcQNE7qS/f1SvRsK3ckWfCaORwKBgQCHGPG7AZ09qngiQXOw\n3kn/Sih4LOOc3B6PKC60ORI4uJ5Jqwx5dSO2PeA0tV+uqLPK21Ysi7SWLiQHwZpm\nkecajSBjmui5O3tVggFF3MGliFV0TKbYqmAE6gEVJQnz+VqRyGQei8Vf3reL+50N\n2+muozshreYG3ufuzQauKvnQrQ==\n-----END PRIVATE KEY-----\n
      scheduler:
        deltaTime: 5000
    async:
      retryPeriod: 100
      retryMaxPeriod: 500
      retryMaxAttempts: 3
      corePoolSize : 500
      maxPoolSize : 1000
      queueCapacity : 0
      keepAlive : 180
      batchSize : 5
      waitTimeoutInSeconds : 5
shipment:
  dc-locations: 0701,0801,1001,1021,1050,0750,US_NONSHIP,CA_NONSHIP,1070
  us-locations: 1021,1001,0801,0701,US_NONSHIP,US_INFINITE
  ca-locations: 1050,0750,CA_NONSHIP,CA_INFINITE,1070
  borderFreeLocations:
    - "0701"
  apoFpoLocations:
    AA:
      - "0701"
    AE:
      - "0701"
    AP:
      - "0701"
    PR:
      - "0701"

commits:
  async:
    corePoolSize: 500
    maxPoolSize: 1000
    queueCapacity: 1500
feign:
  logger:
    level: FULL

dynamicconfig:
  appConfig:
    genericcontroller:
      enabled: true
    appName: inventoryAvailability
  azure:
    cosmosdb:
      #uri: https://sep-eus1-qa-pds-db01.documents.azure.com:443
      key: dgH2HWbRuJrDOUbkcXfMoiNuSnQGY7ELsgtubQGW4bQEo8Qx8DceN1NwmX17nKLo9HlcX0qvJUyYiKlfg0mrTw==
      secondaryKey: JrwEqWWgOB3XfH72cyJweMP2ZzKlXQVSShXVmoi200JyL2YAHOo0rO216GxWr50k6stORQlcn0WWnwYpOrdTMQ==
      dbName: sourcing
      maxPoolSize: 1000
      requestTimeoutInMillis: 3000
      idleConnectionTimeoutInMillis: 43200000
      maxRetryWaitTimeInSeconds: 3
      maxRetryAttemptsOnThrottledRequests: 5
      connectionMode:
        mode: DIRECT
  cache:
    type: jcache
    cache-names:
      - dynamicConfig


shipnodedelay:
  async:
    corePoolSize: 500
    maxPoolSize: 1000
    queueCapacity: 0
    keepAlive: 180
    batchSize: 5
cacheWarmup:
  baseLocation: /mnt/servicesconfigfile
  configs: 'dynamicConfig,shipNode'
  enabled: true

confighub:
  is-sourcing-service-mock-enabled: false